name: On PR pipeline

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lint:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Run shellcheck for all shell scripts in this repo
        run: find . -type f -and -name "*.sh" -exec shellcheck {} \;
      
  test:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set shell scripts executable
        run: find . -type f -and -name "*.sh" -exec chmod u+x {} \;

      - name: Set git global config due to git clone script
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          echo -en "machine github.com\nlogin JanMate\npassword ${{ secrets.JM_GITHUB_TOKEN }}" > ~/.netrc
      
      - name: Run all shell scripts in this repo
        run: |
          find . -type f -and \( -name "*.sh" -and -not -name "run_docker.sh" \) -exec bash -c {} \;
          ./run_docker.sh "${{ secrets.JM_DOCKER_USERNAME }}" "${{ secrets.JM_DOCKER_TOKEN }}"
      
      - name: Clean git global config due to git clone script
        run: |
          git config --global --unset user.name
          git config --global --unset user.email
          rm -f ~/.netrc

  release:
    needs: test
    runs-on: ubuntu-latest
   
    env:
      PROJECT_NAME: happy-bank

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        id: semrel
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Do something when a new release published
        if: steps.semrel.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semrel.outputs.new_release_version }}
          echo ${{ steps.semrel.outputs.new_release_major_version }}
          echo ${{ steps.semrel.outputs.new_release_minor_version }}
          echo ${{ steps.semrel.outputs.new_release_patch_version }}
