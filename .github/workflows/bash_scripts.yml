# This is a basic workflow to help you get started with Actions

name: On PR bash scripts testing

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  # push:
  #   branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Run shellcheck for all shell scripts in this repo
        run: find . -type f -and -name "*.sh" -exec shellcheck {} \;

      - name: Set shell scripts executable
        run: find . -type f -and -name "*.sh" -exec chmod u+x {} \;

      - name: Set git global config due to git clone script
        run: |
          git config --global user.name "Jan MatÄ›jka"
          git config --global user.email "jan.matejka142@gmail.com"
          echo -en "machine github.com\nlogin JanMate\npassword ${{ secrets.JM_GITHUB_TOKEN }}" > ~/.netrc
      
      - name: Run all shell scripts in this repo
        run: |
          find . -type f -and \( -name "*.sh" -and -not -name "run_docker.sh" \) -exec bash -c {} \;
          ./run_docker.sh "${{ secrets.JM_DOCKER_USERNAME }}" "${{ secrets.JM_DOCKER_TOKEN }}"
      
      - name: Clean git global config due to git clone script
        run: |
          git config --global --unset user.name
          git config --global --unset user.email
          rm -f ~/.netrc
